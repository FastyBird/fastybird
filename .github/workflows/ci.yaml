name: "build"

on:
  pull_request:
    paths-ignore:
      - ".docs/**"
  push:
    branches:
      - "main"
    tags:
      - v*
  schedule:
    - cron: "0 8 * * 1" # At 08:00 on Monday

env:
  extensions: "json, intl"
  cache-version: "1"
  composer-version: "v2"
  composer-install: "composer update --no-interaction --no-progress --no-suggest --prefer-dist --prefer-stable"

jobs:
  tests:
    name: "Code tests"
    runs-on: "${{ matrix.operating-system }}"
    needs: [ "qa", "static-analysis" ]

    strategy:
      fail-fast: false
      matrix:
        php-version: [ "8.1" ]
        operating-system: [ "ubuntu-latest" ]
        include:
          - operating-system: "ubuntu-latest"
            php-version: "8.1"
            composer-flags: "--prefer-lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name : "Setup MySQL"
        uses : "mirromutth/mysql-action@v1.1"
        with :
          mysql version : "5.7"
          mysql database : "testdb"
          mysql root password : "root"

      - name: "Setup PHP cache environment"
        id: "extcache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          key: "${{ env.cache-version }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.extcache.outputs.dir }}"
          key: "${{ steps.extcache.outputs.key }}"
          restore-keys: "${{ steps.extcache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          tools: "composer:${{ env.composer-version }}"
          coverage: "none"

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "composercache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Install dependencies"
        run: "${{ env.composer-install }} ${{ matrix.composer-args }}"

      - name: "Rebuild autoload"
        run: "composer dump"

      - name: "Tests"
        run: "make tests"

      - name: "Upload test output"
        if: ${{ failure() }}
        uses: "actions/upload-artifact@v2"
        with:
          name: output
          path: tests/**/output
