name: "Split monorepo"

on:
  push:
    branches:
      - "main"
    tags:
      - v*

env:
  extensions: "json"
  cache-version: "1"
  composer-version: "v2"
  composer-install: "composer update --no-interaction --no-progress --no-suggest --prefer-dist --prefer-stable"

jobs:
  # see json juggling: https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#example-6
  # see https://stackoverflow.com/a/62953566/1348344
  provide_packages:
    name: "Create list of packages for split"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false
      matrix:
        php-version: [ "8.1" ]
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          tools: "composer:${{ env.composer-version }}, cs2pr"
          coverage: "none"

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "composercache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.composercache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Install dependencies"
        run: "${{ env.composer-install }}"

      - name: "Get package json list"
        id: "packages"
        run: echo "::set-output name=matrix::$(vendor/bin/monorepo-builder packages-json --exclude-package easy-coding-standard --exclude-package monorepo-builder --exclude-package config-transformer --exclude-package easy-ci --exclude-package vendor-patches --exclude-package phpstan-rules)"

    # this step is needed, so the output gets to the next defined job
    outputs:
      matrix: ${{ steps.packages.outputs.matrix }}

  split_monorepo:
    name: "Create list of packages for split"
    runs-on: "${{ matrix.operating-system }}"
    needs: [ "provide_packages" ]

    strategy:
      fail-fast: false
      matrix:
        php-version: [ "8.1" ]
        operating-system: [ "ubuntu-latest" ]
        package: ${{fromJson(needs.provide_packages.outputs.matrix)}}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Monorepo Split of ${{ matrix.package }}"
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: "symplify/github-action-monorepo-split@2.0"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          package-directory: 'packages/${{ matrix.package }}'
          split-repository-organization: 'fastybird'
          split-repository-name: '${{ matrix.package }}'
          user-name: "GitHub Action"
          user-email: "action@github.com"
          branch: "main"

      - name: "Monorepo Tagged Split of ${{ matrix.package }}"
        if: "startsWith(github.ref, 'refs/tags/')"
        uses: "symplify/github-action-monorepo-split@2.0"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${GITHUB_REF#refs/tags/}
          package-directory: 'packages/${{ matrix.package }}'
          split-repository-organization: 'fastybird'
          split-repository-name: '${{ matrix.package }}'
          user-name: "GitHub Action"
          user-email: "action@github.com"
          branch: "main"
