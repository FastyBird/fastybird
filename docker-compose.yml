services:
  # APPLICATION
  application:
    container_name: fastybird-app
    build:
      context: .docker/dev
    depends_on:
      - database
    environment:
      # Container specific environment variables
      TZ: ${APP_TZ:-UTC}
      PHP_DATE_TIMEZONE: ${APP_TZ:-UTC}
      PHP_XDEBUG_IDEKEY: "PHPSTORM"
      # Application specific environment variables
      APP_ENV: "dev"
      FB_APP_PARAMETER__DATABASE_HOST: database
      FB_APP_PARAMETER__DATABASE_PORT: 3306
      FB_APP_PARAMETER__DATABASE_USERNAME: ${DATABASE_USERNAME:-fastybird}
      FB_APP_PARAMETER__DATABASE_PASSWORD: ${DATABASE_PASSWORD:-fastybird}
      FB_APP_PARAMETER__DATABASE_DBNAME: ${DATABASE_DBNAME:-fastybird_dev}
      FB_APP_PARAMETER__REDIS_HOST: redis
      FB_APP_PARAMETER__REDIS_PORT: 6379
      FB_APP_PARAMETER__SECURITY_SIGNATURE: ${SECURITY_SIGNATURE}
      FB_APP_PARAMETER__API_PREFIX: ${API_PREFIX:-/api}
      FB_APP_PARAMETER__API_PREFIXED_MODULES: ${API_PREFIXED_MODULES:-true}
      FB_APP_PARAMETER__API_KEY: ${API_KEY:-}
    volumes:
      - ./:/app:delegated
      - ./.docker/dev/php.ini:/etc/php/8.1/fpm/php.ini:delegated
      - ./.docker/dev/php.ini:/etc/php/8.1/cli/php.ini:delegated
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${WORKER_STATUS_PORT:-9001}:9001"
    networks:
      - fastybird

  # MYSQL DATABASE STORAGE
  database:
    container_name: miniserver-database
    image: mariadb
    platform: linux/amd64
    environment:
      # Container specific environment variables
      TZ: ${APP_TZ:-UTC}
      MYSQL_ROOT_PASSWORD: ${ROOT_PASSWORD:-root}
      MYSQL_USER: ${DATABASE_USERNAME:-fastybird}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD:-fastybird}
      MYSQL_DATABASE: ${DATABASE_DBNAME:-fastybird_dev}
    volumes:
      - mysql-data:/var/lib/mysql:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/mysql/data:/var/lib/mysql:rw,delegated
    networks:
      - fastybird

  # REDIS STORAGE
  redis:
    container_name: miniserver-redis
    image: redis
    volumes:
      - redis-other:/var/lib/redis:rw
      - redis-data:/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/redis/other:/var/lib/redis:rw,delegated
      # - ./docker/redis/data:/data:rw,delegated
    networks:
      - fastybird

  redis-commander:
    container_name: miniserver-redis-client
    image: rediscommander/redis-commander
    restart: always
    environment:
      # Container specific environment variables
      REDIS_HOSTS: local:redis:6379
    ports:
      - "${REDIS_ADMIN_PORT:-8081}:8081"
    networks:
      - fastybird

  # MQTT
  mqtt:
    container_name: miniserver-mqtt
    image: eclipse-mosquitto
    volumes:
      - mqtt-data:/mosquitto/data:rw
      - mqtt-log:/mosquitto/log:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/mqtt/data:/mosquitto/data:rw,delegated
    ports:
      - "${MQTT_PORT:-1883}:1883"
    networks:
      - fastybird

networks:
  fastybird:
    driver: bridge

volumes:
  mysql-data:
  redis-other:
  redis-data:
  mqtt-data:
  mqtt-log:
